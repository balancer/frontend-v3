query GetPool($id: String!, $chain: GqlChain!, $userAddress: String) {
  pool: poolGetPool(id: $id, chain: $chain, userAddress: $userAddress) {
    id
    address
    name
    version
    owner
    decimals
    factory
    symbol
    createTime
    type
    chain
    vaultVersion
    dynamicData {
      poolId
      swapEnabled
      totalLiquidity
      totalLiquidity24hAgo
      totalShares
      totalShares24hAgo
      fees24h
      swapFee
      volume24h
      fees48h
      volume48h
      lifetimeVolume
      lifetimeSwapFees
      holdersCount
      isInRecoveryMode
      isPaused
      swapsCount
      sharePriceAth
      sharePriceAthTimestamp
      sharePriceAtl
      sharePriceAtlTimestamp
      totalLiquidityAth
      totalLiquidityAthTimestamp
      totalLiquidityAtl
      totalLiquidityAtlTimestamp
      volume24hAth
      volume24hAthTimestamp
      volume24hAtl
      volume24hAtlTimestamp
      fees24hAth
      fees24hAthTimestamp
      fees24hAtl
      fees24hAtlTimestamp
      yieldCapture24h
      yieldCapture48h
      apr {
        hasRewardApr
        thirdPartyApr {
          ... on GqlPoolAprTotal {
            total
          }
          ... on GqlPoolAprRange {
            min
            max
          }
        }
        nativeRewardApr {
          ... on GqlPoolAprTotal {
            total
          }
          ... on GqlPoolAprRange {
            min
            max
          }
        }
        swapApr
        apr {
          ... on GqlPoolAprTotal {
            total
          }
          ... on GqlPoolAprRange {
            min
            max
          }
        }
        items {
          id
          title
          apr {
            ... on GqlPoolAprTotal {
              total
            }
            ... on GqlPoolAprRange {
              min
              max
            }
          }
          subItems {
            id
            title
            apr {
              ... on GqlPoolAprTotal {
                total
              }
              ... on GqlPoolAprRange {
                min
                max
              }
            }
          }
        }
      }
    }
    allTokens {
      id
      address
      name
      symbol
      decimals
      isNested
      isPhantomBpt
      isMainToken
    }
    displayTokens {
      id
      address
      name
      weight
      symbol
      nestedTokens {
        id
        address
        name
        weight
        symbol
      }
    }
    staking {
      id
      type
      chain
      address
      gauge {
        id
        gaugeAddress
        version
        status
        workingSupply
        otherGauges {
          gaugeAddress
          version
          status
          id
          rewards {
            id
            tokenAddress
            rewardPerSecond
          }
        }
        rewards {
          id
          rewardPerSecond
          tokenAddress
        }
      }
    }
    investConfig {
      singleAssetEnabled
      proportionalEnabled
      options {
        poolTokenIndex
        poolTokenAddress
        tokenOptions {
          ... on GqlPoolToken {
            id
            index
            name
            symbol
            balance
            address
            priceRate
            decimals
            weight
            totalBalance
          }
        }
      }
    }
    withdrawConfig {
      singleAssetEnabled
      proportionalEnabled
      options {
        poolTokenIndex
        poolTokenAddress
        tokenOptions {
          ... on GqlPoolToken {
            id
            index
            name
            symbol
            balance
            address
            priceRate
            decimals
            weight
            totalBalance
          }
        }
      }
    }
    userBalance {
      stakedBalance
      totalBalance
      walletBalance
      stakedBalanceUsd
      walletBalanceUsd
      totalBalanceUsd
    }
    ... on GqlPoolWeighted {
      nestingType
      poolTokens {
        ... on GqlPoolTokenDetail {
          id
          hasNestedPool
          index
          name
          symbol
          balance
          address
          priceRate
          decimals
          weight
        }
      }
    }
    ... on GqlPoolStable {
      amp
      poolTokens {
        ... on GqlPoolTokenDetail {
          id
          hasNestedPool
          index
          name
          symbol
          balance
          address
          priceRate
          decimals
          weight
        }
      }
    }
    ... on GqlPoolMetaStable {
      amp
      poolTokens {
        ... on GqlPoolTokenDetail {
          id
          hasNestedPool
          index
          name
          symbol
          balance
          address
          priceRate
          decimals
          weight
        }
      }
    }
    ... on GqlPoolElement {
      unitSeconds
      principalToken
      baseToken
      poolTokens {
        ... on GqlPoolTokenDetail {
          id
          hasNestedPool
          index
          name
          symbol
          balance
          address
          priceRate
          decimals
          weight
        }
      }
    }
    ... on GqlPoolComposableStable {
      amp
      nestingType
      bptPriceRate
      poolTokens {
        ... on GqlPoolTokenDetail {
          id
          hasNestedPool
          index
          name
          symbol
          balance
          address
          priceRate
          decimals
          weight
        }
      }
    }
    ... on GqlPoolLinear {
      mainIndex
      wrappedIndex
      lowerTarget
      upperTarget
      bptPriceRate
      poolTokens {
        ... on GqlPoolTokenDetail {
          id
          hasNestedPool
          index
          name
          symbol
          balance
          address
          priceRate
          decimals
          weight
        }
      }
    }
    ... on GqlPoolLiquidityBootstrapping {
      name
      nestingType
      poolTokens {
        ... on GqlPoolTokenDetail {
          id
          hasNestedPool
          index
          name
          symbol
          balance
          address
          priceRate
          decimals
          weight
        }
      }
    }
    ... on GqlPoolGyro {
      alpha
      beta
      type
      c
      dSq
      lambda
      root3Alpha
      s
      sqrtAlpha
      sqrtBeta
      tauAlphaX
      tauAlphaY
      tauBetaX
      tauBetaY
      u
      v
      w
      z
      nestingType
      poolTokens {
        ... on GqlPoolTokenDetail {
          id
          hasNestedPool
          index
          name
          symbol
          balance
          address
          priceRate
          decimals
          weight
        }
      }
    }
    ... on GqlPoolFx {
      alpha
      beta
      delta
      epsilon
      lambda
      poolTokens {
        ... on GqlPoolTokenDetail {
          id
          hasNestedPool
          index
          name
          symbol
          balance
          address
          priceRate
          decimals
          weight
        }
      }
    }
  }
}

query GetPoolSwaps($first: Int, $skip: Int, $where: GqlPoolSwapFilter) {
  swaps: poolGetSwaps(first: $first, skip: $skip, where: $where) {
    id
    poolId
    timestamp
    tokenAmountIn
    tokenAmountOut
    tokenIn
    tokenOut
    tx
    userAddress
    valueUSD
  }
}

query GetPoolJoinExits($first: Int, $skip: Int, $poolId: String!) {
  joinExits: poolGetJoinExits(first: $first, skip: $skip, where: { poolIdIn: [$poolId] }) {
    id
    timestamp
    tx
    type
    poolId
    valueUSD
    amounts {
      address
      amount
    }
  }
}

query GetPoolBptPriceChartData($address: String!, $range: GqlTokenChartDataRange!) {
  prices: tokenGetPriceChartData(address: $address, range: $range) {
    id
    price
    timestamp
  }
}

query GetPoolUserJoinExits($first: Int, $skip: Int, $poolId: String!) {
  joinExits: userGetPoolJoinExits(poolId: $poolId, first: $first, skip: $skip) {
    id
    timestamp
    tx
    type
    poolId
    valueUSD
    amounts {
      address
      amount
    }
  }
}

query GetUserSwaps($first: Int, $skip: Int, $poolId: String!) {
  swaps: userGetSwaps(first: $first, skip: $skip, poolId: $poolId) {
    id
    poolId
    timestamp
    tokenAmountIn
    tokenAmountOut
    tokenIn
    tokenOut
    tx
    valueUSD
  }
}

query GetPoolSnapshots($poolId: String!, $range: GqlPoolSnapshotDataRange!, $chainId: GqlChain!) {
  snapshots: poolGetSnapshots(id: $poolId, range: $range, chain: $chainId) {
    id
    timestamp
    totalLiquidity
    volume24h
    fees24h
    sharePrice
  }
}

query GetPoolTokensDynamicData($addresses: [String!]!) {
  staticData: tokenGetTokensData(addresses: $addresses) {
    id
    tokenAddress
    description
    discordUrl
    telegramUrl
    twitterUsername
    websiteUrl
  }
  dynamicData: tokenGetTokensDynamicData(addresses: $addresses) {
    ...GqlTokenDynamicData
  }
}

query GetPoolEvents(
  $poolId: String!
  $chainId: GqlChain!
  $range: GqlPoolEventsDataRange!
  $typeIn: [GqlPoolEventType!]!
  $userAddress: String
) {
  events: poolGetEvents(
    poolId: $poolId
    chain: $chainId
    range: $range
    typeIn: $typeIn
    userAddress: $userAddress
  ) {
    id
    poolId
    timestamp
    tx
    type
    valueUSD
  }
}
