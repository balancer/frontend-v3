query GetSorSwaps(
  $tokenIn: String!
  $tokenOut: String!
  $swapType: GqlSorSwapType!
  $swapAmount: BigDecimal!
  $chain: GqlChain!
  $swapOptions: GqlSorSwapOptionsInput!
) {
  swaps: sorV2GetSwaps(
    tokenIn: $tokenIn
    tokenOut: $tokenOut
    swapType: $swapType
    swapAmount: $swapAmount
    chain: $chain
    swapOptions: $swapOptions
  ) {
    priceImpact
    returnAmount
    returnAmountScaled
    swapAmount
    swapAmountScaled
    swapType
    tokenAddresses
    tokenIn
    tokenInAmount
    tokenOut
    tokenOutAmount
    effectivePrice
    effectivePriceReversed
    swaps {
      amount
      assetInIndex
      assetOutIndex
      poolId
      userData
    }
    routes {
      hops {
        pool {
          displayTokens {
            address
          }
        }
        poolId
        tokenIn
        tokenInAmount
        tokenOut
        tokenOutAmount
      }
      share
      tokenIn
      tokenInAmount
      tokenOut
      tokenOutAmount
    }
  }
}

# query GetTokenRelativePriceChartData(
#   $tokenIn: String!
#   $tokenOut: String!
#   $range: GqlTokenChartDataRange!
# ) {
#   prices: tokenGetRelativePriceChartData(tokenIn: $tokenIn, tokenOut: $tokenOut, range: $range) {
#     id
#     price
#     timestamp
#   }
# }

# fragment GqlSorSwapRoute on GqlSorSwapRoute {
#   tokenIn
#   tokenOut
#   tokenInAmount
#   tokenOutAmount
#   share
#   hops {
#     ...GqlSorSwapRouteHop
#   }
# }

# fragment GqlSorSwapRouteHop on GqlSorSwapRouteHop {
#   poolId
#   pool {
#     id
#     name
#     type
#     symbol
#     dynamicData {
#       totalLiquidity
#     }
#     allTokens {
#       address
#       isNested
#       isPhantomBpt
#       weight
#     }
#   }
#   tokenIn
#   tokenOut
#   tokenInAmount
#   tokenOutAmount
# }

# query GetTradeSelectedTokenData($tokenIn: String!, $tokenOut: String!) {
#   tokenInData: tokenGetTokenData(address: $tokenIn) {
#     id
#     tokenAddress
#     description
#     discordUrl
#     telegramUrl
#     twitterUsername
#   }
#   tokenOutData: tokenGetTokenData(address: $tokenOut) {
#     id
#     tokenAddress
#     description
#     discordUrl
#     telegramUrl
#     twitterUsername
#   }
#   tokenInDynamicData: tokenGetTokenDynamicData(address: $tokenIn) {
#     ...GqlTokenDynamicData
#   }
#   tokenOutDynamicData: tokenGetTokenDynamicData(address: $tokenOut) {
#     ...GqlTokenDynamicData
#   }
# }

fragment GqlTokenDynamicData on GqlTokenDynamicData {
  id
  tokenAddress
  ath
  atl
  marketCap
  fdv
  priceChange24h
  priceChangePercent24h
  priceChangePercent7d
  priceChangePercent14d
  priceChangePercent30d
  high24h
  low24h
  updatedAt
}
